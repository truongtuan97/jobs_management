version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
      
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jobs_management
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    depends_on:
      - db
      - mongodb
      - redis
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://user:password@db:5432/jobs_management
      REDIS_URL: redis://redis:6379/1
      MONGODB_URI: "mongodb://root:example@mongodb:27017/jobs_management?authSource=admin"
      MONGODB_URI_TEST: "mongodb://root:example@mongodb:27017/jobs_management_test?authSource=admin"
    volumes:
      - .:/app
    command: bash -c "rm -f /app/tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"

  # web_test:
  #   build: .
  #   depends_on:
  #     - db
  #     - redis
  #     - mongodb
  #   environment:
  #     RAILS_ENV: test
  #     DATABASE_URL: postgres://user:password@db:5432/jobs_management_test
  #     MONGODB_URI_TEST: "mongodb://root:example@mongodb:27017/jobs_management_test?authSource=admin"
  #     REDIS_URL: redis://redis:6379/1
  #     ALLOW_REMOTE_DATABASE_URL: "true"  # Thêm dòng này
  #   volumes:
  #     - .:/app
  #   command: ["bundle", "exec", "rspec"]

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.sidekiq
    depends_on:
      - redis
      - db
    environment:
      DATABASE_URL: postgres://user:password@db:5432/jobs_management
      REDIS_URL: redis://redis:6379/1
    volumes:
      - .:/app
    command: ["bundle", "exec", "sidekiq"]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000      

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper    
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
  mongodb_data:
